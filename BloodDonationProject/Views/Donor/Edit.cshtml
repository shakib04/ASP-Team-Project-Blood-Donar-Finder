@model BloodDonationProject.Models.userInfo

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>

    <style>
        body {
            margin: 0;
            font-family: Arial, Helvetica, sans-serif;
        }

        .topnav {
            overflow: hidden;
            background-color: #333;
        }

            .topnav h1 {
                float: left;
                color: whitesmoke;
                text-align: center;
                padding: 14px 16px;
                text-decoration: none;
                font-size: 17px;
            }

                .topnav h1:hover {
                    background-color: #ddd;
                    color: black;
                }

                .topnav h1.active {
                    background-color: #4CAF50;
                    color: white;
                }

        .form-horizontal {
            margin: auto;
            width: 60%;
            border: 3px solid #73AD21;
            padding: 10px;
        }
    </style>

</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="topnav">
        <h1>@Html.ActionLink("Home", "Index", "Donor")</h1>
        <h1 class="active">@Html.ActionLink("Edit", "Edit", "Donor")</h1>
        <h1>@Html.ActionLink("Post", "Post", "Donor")</h1>
        <h1>@Html.ActionLink("BloodRequest", "BloodRequest", "Donor")</h1>
        <h1>@Html.ActionLink("Users", "Users", "Donor")</h1>
        <h1>@Html.ActionLink("Report", "Report", "Donor")</h1>
        <h1>@Html.ActionLink("Report2", "Report2", "Donor")</h1>
        <h1>@Html.ActionLink("Logout", "Logout", "Admin")</h1>
    </div>
    <div class="form-horizontal">
        <h4>Update Profile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.userID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="name" value="@Model.Name" />
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="password" name="password" value="@Model.Password" />
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="email" value="@Model.Email" />
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="phone" value="@Model.Phone" />
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="address" value="@Model.Address" />
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="dob" value="@Model.DOB.ToString("yyyy-MM-dd")" />
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="type" value="@Model.Type" readonly />
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="gender">
                    <option></option>
                    @if (Model.Gender == "Male")
                    {
                        <option value="Male" selected>Male</option>
                        <option value="Female">Female</option>
                    }
                    @if (Model.Gender == "Female")
                    {
                        <option value="Female" selected>Female</option>
                        <option value="Male">Male</option>
                    }

                </select>
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="bloodGroup">
                    <option></option>
                    @if (Model.BloodGroup == "A+")
                    {
                        <option value="A+" selected>A+</option>
                    }
                    @if (Model.BloodGroup == "A-")
                    {
                        <option value="A-" selected>A-</option>
                    }
                    @if (Model.BloodGroup == "B+")
                    {
                        <option value="B+" selected>B+</option>
                    }
                    @if (Model.BloodGroup == "B-")
                    {
                        <option value="B-" selected>B-</option>
                    }
                    @if (Model.BloodGroup == "AB+")
                    {
                        <option value="AB+" selected>AB+</option>
                    }
                    @if (Model.BloodGroup == "AB-")
                    {
                        <option value="AB-" selected>AB-</option>
                    }
                    @if (Model.BloodGroup == "O+")
                    {
                        <option value="O+" selected>O+</option>
                    }
                    @if (Model.BloodGroup == "O-")
                    {
                        <option value="O-" selected>O-</option>
                    }
                    <option value="A+">A+</option>
                    <option value="A-">A-</option>
                    <option value="B+">B+</option>
                    <option value="B-">B-</option>
                    <option value="AB+">AB+</option>
                    <option value="AB-">AB-</option>
                    <option value="O+">O+</option>
                    <option value="O-">O-</option>
                </select>
                @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
</body>
</html>
